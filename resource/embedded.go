package resource

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _ui_css_app_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\xdf\x6f\xdb\x36\x10\x7e\xe7\x5f\x71\x48\x31\xe4\x07\x2c\xdb\x71\x32\x60\xb0\x5f\xa6\xba\x19\x62\xb4\x50\x86\xc8\x59\xd1\x47\x4a\x3a\x49\x44\x28\x92\x23\x29\xcb\xee\xb0\xff\x7d\x47\x49\xf6\xe2\xb5\x5d\x1e\x02\xf3\xee\xc3\xdd\xf7\x7d\x77\xa7\xd9\xcd\x0d\x5b\x6b\x73\xb0\xa2\xaa\x3d\x2c\xe6\xb7\xf7\xb0\xad\x11\xd6\x3a\x7f\xb5\x9a\xe7\x35\xc4\xad\xaf\xb5\x75\x53\xc6\x3e\x89\x1c\x95\xc3\x02\x5a\x55\xa0\x05\x4f\xb0\xd8\x10\x04\x61\xcc\x4c\xe0\x0f\xb4\x4e\x68\x05\x8b\xe9\x1c\xae\x02\xe0\x62\x4c\x5d\x5c\xaf\xd8\x41\xb7\xd0\xf0\x03\x28\xed\xa1\x75\x48\x05\x84\x83\x52\x48\x04\xdc\xe7\x68\x3c\x08\x05\xb9\x6e\x8c\x14\x5c\xe5\x08\x9d\xf0\x75\xdf\x64\x2c\x31\x65\x5f\xc6\x02\x3a\xf3\x9c\xb0\x9c\xd0\x86\x5e\xe5\x5b\x14\x70\xcf\x18\xd0\x5f\xed\xbd\x59\xce\x66\x5d\xd7\x4d\x79\xcf\x72\xaa\x6d\x35\x93\x03\xca\xcd\x3e\x6d\xd6\x0f\x49\xfa\x10\x11\x53\xc6\x5e\x94\x44\xe7\xc0\xe2\x9f\xad\xb0\x24\x30\x3b\x00\x37\xc4\x23\xe7\x19\xb1\x93\xbc\x03\x6d\x81\x57\x16\x29\xe7\x75\xe0\xd9\x59\xe1\x85\xaa\x26\xe0\x74\xe9\x3b\x6e\x91\x15\xc2\x79\x2b\xb2\xd6\x9f\x19\x74\x64\x45\x4a\xdf\x02\xc8\x22\xae\xe0\x22\x4e\x61\x93\x5e\xc0\xfb\x38\xdd\xa4\x13\xf6\x79\xb3\x7d\x7c\x7a\xd9\xc2\xe7\xf8\xf9\x39\x4e\xb6\x9b\x87\x14\x9e\x9e\x61\xfd\x94\x7c\xd8\x6c\x37\x4f\x09\xbd\x7e\x83\x38\xf9\x02\x1f\x37\xc9\x87\x09\x20\xd9\x43\x4d\x70\x6f\x6c\xe0\xae\x2d\x13\xc1\x3a\x2c\xa6\x90\x22\x9e\x35\x2f\xf5\x40\xc6\x19\xcc\x45\x29\x72\x52\xa4\xaa\x96\x57\x08\x95\xde\xa1\x55\x24\x84\x19\xb4\x8d\x70\x61\x78\x8e\xa8\x15\x20\x45\x23\x3c\xf7\xfd\xfb\x1b\x39\xff\xb6\x88\x5f\x88\xf3\x73\xda\x8f\x91\x85\x3e\x8a\x37\xe8\xc2\x4c\x72\xad\x06\xb9\xc3\xf2\x0c\x6b\xb4\x84\x58\x15\x16\x3b\x78\xaf\xd5\x0e\x09\x80\x70\x45\xdd\x0e\x19\xb5\xf9\xb5\x6a\xb8\x90\x53\xda\x80\x6b\x76\x33\x63\x37\xf0\x17\xcd\xb1\xe1\xb6\x12\x6a\x09\xf3\x15\x3d\x0c\x2f\x0a\xe2\x3a\xbe\xa2\x46\x7f\x8d\x32\xbd\x8f\x9c\xf8\xda\x47\x33\x6d\x89\x67\x08\xf5\xe9\x0e\xb3\x57\xe1\xff\x07\xf1\xa3\xcc\xdf\xac\xf6\x8d\x9c\xb0\x4c\x17\x87\x9e\x44\x8d\xe1\x38\x96\x70\x3b\x9f\xff\x14\xd2\xa7\x44\xc6\xf3\xd7\xca\x6a\xf2\x27\xca\xb5\x0c\xf2\xde\x95\xb7\xe5\xa2\xbc\x0b\xe5\x8f\x91\xbb\xbb\xfe\x59\x92\x1f\x51\xc9\x1b\x21\x0f\x4b\xb8\x4c\x75\x6b\x69\xc7\x53\x4e\xf6\xfe\x6e\xf5\xe5\x04\x2e\x1f\x51\xee\xd0\xd3\xce\x41\x82\x2d\x52\xe4\x14\xa0\x2d\x23\x5c\xe4\xd0\x8a\xf2\x54\xaa\x1b\x49\xdd\xcf\xe7\xa7\x18\xa9\x41\xa2\x79\x6f\x7a\x15\xd3\xb2\x95\xf2\xb1\x87\xad\x29\x4b\x27\x43\x53\x7c\xab\x27\xe7\x32\xbf\x0a\xa2\x20\x82\x9f\xe7\x66\x7f\xbd\x82\xd9\x0d\x7c\x44\x34\x61\xc5\x25\xe1\x87\x23\x1c\xf0\x61\xa8\x74\x4a\x26\xe1\x3b\xa0\xf9\x50\xfd\xf1\xf1\xb6\x64\x28\xb3\xfa\x81\x33\x65\x39\xb8\x3e\x3a\xed\xbd\x6e\x88\xac\xd9\xd3\x0d\x49\x51\xc0\xbb\xa2\x28\xce\xa6\x7c\x4b\xb5\xe8\x8b\x34\x8a\x19\x9a\x45\xc4\xea\x75\x19\xfe\x4d\xce\x43\x3b\xe1\x44\xb8\xac\x40\xc6\xe3\xde\x47\x05\xe6\xda\xf6\x0b\xbc\xa4\x2f\x8e\xc2\xd5\x31\xe1\x2d\x99\x49\xab\x4a\xcd\x5b\x43\x6b\x9f\x73\x87\xdf\x99\x17\x9d\xab\x91\x9c\x66\x25\x54\x70\x22\xca\x24\x7d\x12\x57\xa7\x95\x8c\xec\x20\xf8\x7b\xfc\x8e\xbf\x6b\xdd\x60\x42\xf7\xd0\x93\x3a\x1b\xda\x2f\xdf\x0c\x6d\xb1\x18\x8c\xfb\x2f\xc5\x23\x75\xba\xd3\xb0\x0a\x32\xe2\x52\x54\x24\x29\x5a\x0c\x7d\xff\x09\x00\x00\xff\xff\xbf\xd9\x39\x3d\xc0\x05\x00\x00")

func ui_css_app_css_bytes() ([]byte, error) {
	return bindata_read(
		_ui_css_app_css,
		"ui/css/app.css",
	)
}

func ui_css_app_css() (*asset, error) {
	bytes, err := ui_css_app_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/css/app.css", size: 1472, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_css_rest_explorer_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xdd\x6f\xdb\x36\x10\x7f\xe7\x5f\x71\xc8\x30\xa4\x0d\xfc\x91\xb6\xdb\x8b\x02\x0c\x53\xdc\x0c\x13\x16\x38\x83\xe5\xac\xe8\x23\x45\x9d\x24\xa2\x14\x8f\x23\xa9\xc8\xc6\xb0\xff\x7d\x47\xc9\xd9\x9a\x64\x5f\xf5\x93\x8f\xbc\xbb\xdf\xc7\x1d\xb5\xbe\xb8\x10\x1b\x72\x47\xaf\xdb\x2e\xc2\xdb\xcb\x37\xdf\xc0\xbe\x43\xd8\x90\xfa\xe4\x49\xaa\x0e\xf2\x21\x76\xe4\xc3\x4a\x88\x5b\xad\xd0\x06\xac\x61\xb0\x35\x7a\x88\x9c\x96\x3b\x4e\x41\x38\xdd\x2c\xe0\x17\xf4\x41\x93\x85\xb7\xab\x4b\x78\x95\x12\xce\x4e\x57\x67\xaf\xaf\xc4\x91\x06\xe8\xe5\x11\x2c\x45\x18\x02\x72\x03\x1d\xa0\xd1\x06\x01\x0f\x0a\x5d\x04\x6d\x41\x51\xef\x8c\x96\x56\x21\x8c\x3a\x76\x13\xc8\xa9\xc5\x4a\x7c\x3c\x35\xa0\x2a\x4a\xce\x95\x9c\xed\x38\x6a\x3e\xcf\x02\x19\x85\x00\xfe\x75\x31\xba\x6c\xbd\x1e\xc7\x71\x25\x27\x96\x2b\xf2\xed\xda\xcc\x59\x61\x7d\x5b\x6c\x6e\xb6\xe5\xcd\x92\x99\x0a\x71\x6f\x0d\x86\x00\x1e\x7f\x1d\xb4\x67\x81\xd5\x11\xa4\x63\x1e\x4a\x56\xcc\xce\xc8\x11\xc8\x83\x6c\x3d\xf2\x5d\xa4\xc4\x73\xf4\x3a\x6a\xdb\x2e\x20\x50\x13\x47\xe9\x51\xd4\x3a\x44\xaf\xab\x21\x3e\x31\xe8\x91\x15\x2b\xfd\x3c\x81\x2d\x92\x16\xce\xf2\x12\x8a\xf2\x0c\xae\xf3\xb2\x28\x17\xe2\x43\xb1\xff\xf1\xee\x7e\x0f\x1f\xf2\xdd\x2e\xdf\xee\x8b\x9b\x12\xee\x76\xb0\xb9\xdb\xbe\x2f\xf6\xc5\xdd\x96\xa3\x1f\x20\xdf\x7e\x84\x9f\x8a\xed\xfb\x05\x20\xdb\xc3\x20\x78\x70\x3e\x71\x27\x2f\x74\xb2\x0e\xeb\x15\x94\x88\x4f\xc0\x1b\x9a\xc9\x04\x87\x4a\x37\x5a\xb1\x22\xdb\x0e\xb2\x45\x68\xe9\x01\xbd\x65\x21\xc2\xa1\xef\x75\x48\xc3\x0b\x4c\xad\x06\xa3\x7b\x1d\x65\x9c\xe2\x17\x72\xfe\x82\xc8\xef\x99\xf3\xae\x9c\xc6\x28\x12\x8e\x95\x3d\x86\x34\x13\x45\x76\x96\x3b\x2f\xcf\xbc\x46\x19\xe4\xb6\xf6\x38\xc2\x35\xd9\x07\xe4\x04\x84\x57\x8c\x76\xac\x18\xe6\xfb\xb6\x97\xda\xac\x78\x03\x5e\x8b\x8b\xb5\x58\xb1\xac\x78\x73\x70\x86\x3c\xfa\xc5\xd3\x70\x93\x7a\x93\x09\xcf\x8e\x6f\xa9\x85\xdf\x78\xf8\x1d\xa6\x65\xce\xe0\xcd\xe5\xe5\xd7\x57\xe2\xf7\x2f\xaa\x6d\x0c\x49\x2e\x35\xd8\xc4\x2b\x0e\x9d\xac\x6b\xb6\x27\xf5\x72\x07\x7e\x1e\xee\x90\x4e\x47\x5d\xc7\x2e\x83\x6f\xff\xa5\xfd\xd4\xac\x92\xea\x53\xeb\x89\xfd\x5b\x2a\x32\x49\xfe\x57\x4d\xd3\xfc\x63\xcd\x52\xcd\x7f\xa6\xda\x5e\xfa\x56\xdb\x65\x45\x31\x52\x9f\x9d\xa0\xff\xab\xf0\x3b\xe8\xde\xcd\x32\xf8\x60\x39\x9e\x7c\xb0\xe4\x7b\x69\x12\xf1\x88\x87\xb8\x8c\x5e\xda\xc0\xb3\xe2\xae\x83\xe3\xb9\x2b\x19\xf0\xea\x25\xe2\xbb\xff\x03\xa8\xad\x1b\xe2\x9f\x88\x19\xc7\xbc\x94\x3a\xbe\x28\x7c\xb4\xd7\x51\xd0\x69\xa9\x32\x7e\x6c\x86\xd7\xeb\x61\x42\x9e\xd8\x36\xb2\xd7\xe6\x98\xc1\x79\x49\x83\x57\xe9\x13\x54\x23\xfc\xec\xe9\x7c\x01\xe7\x1b\x3e\xd2\xbc\x83\x5b\x1c\x39\x3c\x45\x0b\xe8\xc9\x52\xe0\xc7\x8d\x7f\x87\xb7\x54\x06\xa5\xbf\x1e\x58\x8d\x7d\x86\x2d\xab\x40\x86\x1f\x62\xc2\xf6\xb3\x47\x8f\xa3\x8d\xe4\xe6\x61\xa7\x96\x7f\x04\x00\x00\xff\xff\x29\xec\xd5\x5f\x1d\x05\x00\x00")

func ui_css_rest_explorer_css_bytes() ([]byte, error) {
	return bindata_read(
		_ui_css_rest_explorer_css,
		"ui/css/rest_explorer.css",
	)
}

func ui_css_rest_explorer_css() (*asset, error) {
	bytes, err := ui_css_rest_explorer_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/css/rest_explorer.css", size: 1309, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x51\x6f\xdb\x36\x10\x7e\xd7\xaf\xb8\x6a\x0f\x6e\x50\x4b\x72\xbb\x02\xdb\x32\xdb\xab\xeb\x78\xa8\xb1\xce\x1e\x2c\x67\x45\x9f\x06\x5a\x3a\x49\x4c\x28\x52\x23\x29\x2b\x02\xf6\xe3\x77\x94\xe4\x34\xde\x3c\x20\x03\x9a\x17\x87\xe4\xc7\xbb\xef\xee\xfb\x8e\x9a\xbe\x08\x02\x6f\xa9\xaa\x56\xf3\xbc\xb0\xf0\x66\xf2\xfa\x2d\xec\x0b\x84\xa5\x4a\xee\xb5\x62\x49\x01\x8b\xda\x16\x4a\x9b\xd0\xf3\x3e\xf2\x04\xa5\xc1\x14\x6a\x99\xa2\x06\x4b\xb0\x45\x45\x10\x84\xe1\x64\x0c\xbf\xa3\x36\x5c\x49\x78\x13\x4e\xe0\xa5\x03\xf8\xc3\x91\x7f\xf5\xa3\xd7\xaa\x1a\x4a\xd6\x82\x54\x16\x6a\x83\x14\x80\x1b\xc8\xb8\x40\xc0\x87\x04\x2b\x0b\x5c\x42\xa2\xca\x4a\x70\x26\x13\x84\x86\xdb\xa2\x4b\x32\x84\x08\xbd\xcf\x43\x00\x75\xb0\x8c\xb0\x8c\xd0\x15\xad\xb2\xa7\x28\x60\xd6\xf3\x80\xfe\x0a\x6b\xab\xeb\x28\x6a\x9a\x26\x64\x1d\xcb\x50\xe9\x3c\x12\x3d\xca\x44\x1f\xd7\xcb\xd5\x26\x5e\x05\xc4\xd4\xf3\x6e\xa5\x40\x63\x40\xe3\x9f\x35\xd7\x54\xe0\xa1\x05\x56\x11\x8f\x84\x1d\x88\x9d\x60\x0d\x28\x0d\x2c\xd7\x48\x67\x56\x39\x9e\x8d\xe6\x96\xcb\x7c\x0c\x46\x65\xb6\x61\x1a\xbd\x94\x1b\xab\xf9\xa1\xb6\x67\x0d\x3a\xb1\xa2\x4a\x9f\x02\xa8\x45\x4c\x82\xbf\x88\x61\x1d\xfb\xf0\x7e\x11\xaf\xe3\xb1\xf7\x69\xbd\xff\xb0\xbd\xdd\xc3\xa7\xc5\x6e\xb7\xd8\xec\xd7\xab\x18\xb6\x3b\x58\x6e\x37\x37\xeb\xfd\x7a\xbb\xa1\xd5\xcf\xb0\xd8\x7c\x86\x5f\xd6\x9b\x9b\x31\x20\xb5\x87\x92\xe0\x43\xa5\x1d\x77\xa5\x3d\xee\x5a\x87\x69\x08\x31\xe2\x59\xf2\x4c\xf5\x64\x4c\x85\x09\xcf\x78\x42\x15\xc9\xbc\x66\x39\x42\xae\x8e\xa8\x25\x15\xe2\x55\xa8\x4b\x6e\x9c\x78\x86\xa8\xa5\x20\x78\xc9\x2d\xb3\xdd\xfa\x5f\xe5\x7c\x49\xb1\xb8\x25\xce\xbb\xb8\x93\xd1\x73\x79\x24\x2b\xd1\x38\x4d\x12\x25\xfb\x72\x7b\xf3\xf4\x36\xba\x86\x85\x4c\x35\x36\xf0\x5e\xc9\x23\x12\x00\xe1\x25\x65\x6b\x0f\x94\xe6\x5d\x5e\x32\x2e\x42\x72\xc0\x95\x17\x04\x73\x6f\xfa\x22\x55\x89\x6d\x2b\x24\x29\x4b\x41\x6b\xf7\x03\x32\x0f\x48\x9a\x99\x9f\x9c\x0c\xea\xcf\x49\xee\x69\x81\x2c\x9d\x77\xba\x4f\x4b\xb4\xe4\x8c\x82\x69\x83\x76\xe6\xd7\x36\x0b\xbe\xf7\x87\x23\xc1\xe5\x3d\x14\x1a\xb3\xd9\xc8\xd9\xc3\x90\x3f\x32\xa2\x69\xc2\x5c\xa9\x5c\x20\xab\xb8\x71\xf9\xa3\xc4\x98\x9f\x32\x56\x72\xd1\xce\x62\x55\xeb\x04\x5f\xc5\x4c\x9a\x57\xbf\x69\x75\xfd\x76\x32\x19\xff\x30\x99\xfc\x35\xec\x2f\x55\x8a\x6e\x7f\x44\xe6\x11\xb3\x91\xb1\x2d\x39\xa9\x40\xb4\x23\x70\xd4\x67\x23\x8b\x0f\xd6\xc5\x1b\x3d\xa5\xe0\xb0\xfe\x17\xac\xdf\x73\xf2\x1d\x2e\xa2\xea\x42\xfa\xf5\x9f\x8b\x27\xf5\xed\x1f\xe4\x02\xa1\x34\xea\xfe\x26\xb8\xa9\x86\xfd\xf6\x66\xfb\xd8\xdc\xab\x6b\x78\x47\xfe\x50\xda\x06\x82\xdf\x23\x1c\xb0\x60\x47\x4e\x7a\xb9\x4e\x77\x89\x4c\xa2\x39\xcd\xa0\xd1\xc9\xcc\x3f\x35\x87\xdd\xb1\x87\x7f\xf6\xc6\xed\xd1\x18\x1d\x88\x29\x99\x48\x30\x7d\x67\xa2\xd7\xe1\xb7\xe1\x77\xa7\x75\x58\x72\x19\xde\x11\x8d\x69\xd4\xc7\xfc\xda\x09\x02\xad\x68\x88\x9e\x93\x26\xba\xeb\xfb\xf9\x0c\x58\x67\x57\x25\x04\x3d\x60\x51\xa9\x24\x27\xdb\xfe\xdf\x6b\xe7\x4a\x9c\x5d\xbe\xac\x88\x2b\x3c\x1c\x1e\x9d\xff\x92\xc5\x72\x2b\x70\xfe\xf8\x1c\x4f\xa3\x7e\xc3\x79\x3e\x3a\x99\x7e\x7a\x50\x69\x3b\xe0\xdd\x1e\x0d\x6b\x22\x98\x31\x33\x9f\x8a\xdf\xb0\xe3\xe0\x25\x3a\x65\x83\x73\xbe\x89\xfc\x73\x48\xd0\xf9\x6c\xf8\xbf\x50\x25\x6e\x68\x8e\xfd\xa7\x79\xd9\x85\x20\x43\xa3\x2e\xc5\xf2\xe7\xbf\xf6\x87\x97\x6f\xba\x5e\x05\xa7\x5e\x5d\xbe\xbf\x5b\xc5\x7b\x58\x0d\x90\xc7\x28\x7d\xd5\xa8\x87\x55\xca\x8f\xa7\xcb\x59\x2d\xc4\x07\x74\x9f\xb1\x25\x89\x42\x1f\x08\x17\x98\x9e\x8b\x23\xc7\x86\x94\x20\x64\xdf\xb5\xbe\x59\x14\xa7\x7b\x55\xfe\x0e\x00\x00\xff\xff\xd0\xc3\x9e\x1e\x01\x07\x00\x00")

func ui_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_ui_index_html,
		"ui/index.html",
	)
}

func ui_index_html() (*asset, error) {
	bytes, err := ui_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/index.html", size: 1793, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_js_app_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5f\x6b\xdb\x3a\x14\x7f\xae\x3f\xc5\x21\x5c\x70\x02\xa9\xdd\x5b\xee\x53\xca\x85\xeb\xa6\xb9\xcc\xac\x4b\x46\x9c\xac\x94\x32\x86\xa2\x1c\xdb\x62\xb2\xe4\x49\x72\xdc\x30\xfa\xdd\x77\x64\x3b\x2c\xd9\x5e\x16\xf2\x22\x9d\xdf\xf9\xfd\x39\x3a\x8e\x63\x98\xeb\xfa\x68\x44\x51\x3a\xb8\xbd\xf9\xfb\x1f\xd8\x94\x48\x57\xfc\xab\xd1\x8c\x97\x90\x34\xae\xd4\xc6\x46\x41\x1c\xd3\x1f\x1e\x05\x47\x65\x71\x0f\x8d\xda\xa3\x01\x47\xd8\xa4\x26\x1c\x9e\x2a\x53\xf8\x84\xc6\x0a\xad\xe0\x36\xba\x81\xb1\x07\x8c\x86\xd2\x68\x72\xe7\x29\x8e\xba\x81\x8a\x1d\x41\x69\x07\x8d\x45\xe2\x10\x16\x72\x21\x11\xf0\x95\x63\xed\x40\x28\xe0\xba\xaa\xa5\x60\x8a\x23\xb4\xc2\x95\x9d\xce\xc0\xe2\x9d\xc0\xf3\xc0\xa1\x77\x8e\x11\x9c\x51\x43\x4d\xa7\xfc\x1c\x08\xcc\x0d\xa6\xfd\xaf\x74\xae\x9e\xc5\x71\xdb\xb6\x11\xeb\x0c\x47\xda\x14\xb1\xec\xa1\x36\x7e\x4c\xe7\x8b\x65\xb6\xb8\x26\xd3\x43\xd3\x56\x49\xb4\x16\x0c\x7e\x6b\x84\xa1\xc0\xbb\x23\xb0\x9a\x4c\x71\xb6\x23\xab\x92\xb5\xa0\x0d\xb0\xc2\x20\xd5\x9c\xf6\xa6\x5b\x23\x9c\x50\xc5\x14\xac\xce\x5d\xcb\x0c\x7a\x9a\xbd\xb0\xce\x88\x5d\xe3\x2e\x66\x76\xb2\x48\xc9\xcf\x01\x34\x35\xa6\x60\x94\x64\x90\x66\x23\xb8\x4f\xb2\x34\x9b\x7a\x92\xa7\x74\xf3\x6e\xb5\xdd\xc0\x53\xb2\x5e\x27\xcb\x4d\xba\xc8\x60\xb5\x86\xf9\x6a\xf9\x90\x6e\xd2\xd5\x92\x4e\xff\x43\xb2\x7c\x86\xf7\xe9\xf2\x61\x0a\x48\x13\x23\x1d\x7c\xad\x8d\x4f\xa0\x8d\xa7\x10\x7e\xa0\xb8\x8f\x20\x43\xbc\xb0\x90\xeb\xde\x92\xad\x91\x8b\x5c\x70\x8a\xa6\x8a\x86\x15\x08\x85\x3e\xa0\x51\x94\xc8\xf7\xd7\x68\x2a\x61\xfd\xc3\x5a\xf2\xb8\x07\x29\x2a\xe1\x98\xeb\xce\xbf\xe5\xfa\xa9\x92\x6c\xc9\xf9\x3a\xeb\xde\xd7\xd3\x78\x35\xc5\x2a\xb4\xfe\xb1\xb8\x56\x7d\xf4\xb3\x05\xeb\xf7\x6d\x06\x89\xda\x1b\x6c\xe1\x5e\xab\x03\x12\x0a\x61\x4c\xaa\xc7\x1d\xc9\xfd\x57\x54\x4c\xc8\x88\x56\x64\x12\x04\x07\x66\x80\x9b\xa4\xae\xe1\x5f\xf0\xbe\x25\x33\x51\xa5\xf7\x8d\xc4\x71\xc8\x4f\x4b\x1c\x4e\xe1\x25\xb8\x0a\x55\xb1\xd6\x34\xe6\x70\x7a\x15\x7c\xa6\x55\x0c\xba\x3e\xe2\x51\xb9\x28\xc6\x2f\xe1\x5f\xc6\x57\x3f\x1a\x7d\x10\x14\x87\x7a\xf2\x46\x71\x1f\x70\x7c\x51\x98\xc0\xf7\x00\xe0\xe2\x2a\xa2\x8b\xb6\x44\x35\x0e\x63\x9a\xb8\xbb\xa6\xc9\x4b\x6d\x3a\x0e\x8f\x85\x3e\xa8\x96\x12\xcd\x2c\x5c\x13\x62\x31\x00\xe6\xce\xc8\x70\xda\x41\x1c\xd2\x03\x31\x87\x5b\x23\x67\x61\x7c\x3a\xd9\x8e\xf0\xcb\x89\x30\x2a\x5d\x25\x43\xc2\xbf\x4d\xa2\xae\x6b\x50\xad\xb4\x12\x34\xc4\x4e\xef\xea\x5c\xec\x43\x5f\xf8\x03\x9d\x81\xe2\x17\x05\xed\x37\xa9\x15\x16\xc7\x7d\x10\xfa\x10\xe8\x63\xe0\x6e\xa3\xa9\xb9\x87\xdd\x05\x6f\x7e\x9a\x3f\x02\x00\x00\xff\xff\xc6\x61\x4b\x4f\x48\x04\x00\x00")

func ui_js_app_js_bytes() ([]byte, error) {
	return bindata_read(
		_ui_js_app_js,
		"ui/js/app.js",
	)
}

func ui_js_app_js() (*asset, error) {
	bytes, err := ui_js_app_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/js/app.js", size: 1096, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_js_controllers_monitor_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x92\x5f\x6b\xdb\x3c\x14\xc6\xef\xf3\x29\x0e\xa1\xe0\x14\xfc\xda\x7d\x0b\xbb\xd9\xd8\x85\x97\x76\xcc\xac\x73\x20\x4e\x57\xca\xd8\x85\x22\x1f\xdb\x62\xb2\xa4\x1d\xc9\x75\xc3\xd8\x77\xdf\x91\x93\xb0\x96\x85\x5c\x48\xd6\x73\x9e\xf3\x3b\x7f\xf2\x1c\xd6\xd6\x1d\x48\x75\x7d\x80\xeb\xab\xff\xdf\xc0\xae\x47\xfe\x24\x7f\x90\x15\xb2\x87\x62\x0c\xbd\x25\x9f\x2d\xf2\x9c\xff\x70\xa7\x24\x1a\x8f\x0d\x8c\xa6\x41\x82\xc0\xda\xc2\xb1\x0e\xcf\x2f\x29\x7c\x45\xf2\xca\x1a\xb8\xce\xae\x60\x15\x05\xcb\xd3\xd3\xf2\xf2\x5d\xb4\x38\xd8\x11\x06\x71\x00\x63\x03\x8c\x1e\xd9\x43\x79\x68\x95\x46\xc0\x67\x89\x2e\x80\x32\x20\xed\xe0\xb4\x12\x46\x22\x4c\x2a\xf4\x73\x9e\x93\x4b\x24\x81\xc7\x93\x87\xdd\x07\xc1\x72\xc1\x01\x8e\x6f\xed\x4b\x21\x88\x70\x82\x8e\xbf\x3e\x04\xf7\x36\xcf\xa7\x69\xca\xc4\x0c\x9c\x59\xea\x72\x7d\x94\xfa\xfc\xae\x5c\xdf\x56\xf5\xed\x7f\x0c\x7d\x0a\xba\x37\x1a\xbd\x07\xc2\x9f\xa3\x22\x2e\x78\x7f\x00\xe1\x18\x4a\x8a\x3d\xa3\x6a\x31\x81\x25\x10\x1d\x21\xbf\x05\x1b\xa1\x27\x52\x41\x99\x2e\x05\x6f\xdb\x30\x09\xc2\x68\xd3\x28\x1f\x48\xed\xc7\xf0\xaa\x67\x67\x44\xae\xfc\xa5\x80\xbb\x26\x0c\x2c\x8b\x1a\xca\x7a\x09\x1f\x8a\xba\xac\xd3\x68\xf2\x50\xee\x3e\x6d\xee\x77\xf0\x50\x6c\xb7\x45\xb5\x2b\x6f\x6b\xd8\x6c\x61\xbd\xa9\x6e\xca\x5d\xb9\xa9\xf8\xf6\x11\x8a\xea\x11\x3e\x97\xd5\x4d\x0a\xc8\x1d\xe3\x3c\xf8\xec\x28\x56\x60\x29\x5a\xa8\xd8\x50\x6c\x32\xa8\x11\x5f\x21\xb4\xf6\x88\xe4\x1d\x4a\xd5\x2a\xc9\xa5\x99\x6e\x14\x1d\x42\x67\x9f\x90\x0c\x57\x14\xe3\x1d\xd2\xa0\x7c\x1c\xac\x67\xc6\x06\xb4\x1a\x54\x10\x61\xbe\xff\x53\xd7\xdf\x2c\xc5\x3d\x93\x6f\xeb\x79\xbe\xd1\x26\x66\x33\x62\x40\x1f\x87\x25\xad\x39\x96\x3e\x2f\xd8\xe2\x49\x10\x48\x2a\x9c\x83\xf7\x10\x19\xb4\xa0\x6c\xb0\xcd\xa8\x71\x95\xc8\xf3\x42\x26\xbc\x44\x8b\x59\x95\xcd\xe1\x56\x6b\xa4\x55\xf2\xc5\x1a\xc5\x36\xeb\x40\x3a\x49\xe1\x5b\x72\xe1\x79\x23\x90\x8f\xc9\x45\x9c\x3c\x1f\xda\xd1\xc8\x88\xbb\x9a\x5f\xd2\x79\x21\x2e\xe1\xd7\xe2\xf7\x77\x76\xfc\x13\x00\x00\xff\xff\x90\xca\x9a\xd1\x06\x03\x00\x00")

func ui_js_controllers_monitor_js_bytes() ([]byte, error) {
	return bindata_read(
		_ui_js_controllers_monitor_js,
		"ui/js/controllers/monitor.js",
	)
}

func ui_js_controllers_monitor_js() (*asset, error) {
	bytes, err := ui_js_controllers_monitor_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/js/controllers/monitor.js", size: 774, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_js_controllers_rest_explorer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xef\x6f\xdb\x36\x10\xfd\x9e\xbf\xe2\x1a\x14\xa3\x8c\xca\x52\x5a\xec\xc3\x60\x23\xeb\x54\x37\xc5\xbc\x06\xf6\x60\x3b\x2d\x8a\x20\x1f\x68\xe9\x24\xb3\x91\x49\x95\xa4\x62\x1b\x43\xfe\xf7\x1d\xf5\xc3\x92\x93\xec\x47\x90\xc4\x16\x79\x77\xef\xdd\xe3\xe3\x29\x0c\x61\xa2\x8a\x83\x16\xd9\xc6\xc2\xbb\x8b\xb7\x3f\xc3\x6a\x83\xb4\x14\xdf\x6b\xc5\xe3\x0d\x44\xa5\xdd\x28\x6d\x82\xb3\x30\xa4\x5f\xb8\x16\x31\x4a\x83\x09\x94\x32\x41\x0d\x96\x62\xa3\x82\xe2\xb0\xdd\xf1\xe1\x0b\x6a\x23\x94\x84\x77\xc1\x05\x78\x2e\xe0\xbc\xd9\x3a\x1f\x8c\x5d\x89\x83\x2a\x61\xcb\x0f\x20\x95\x85\xd2\x20\xd5\x10\x06\x52\x91\x23\xe0\x3e\xc6\xc2\x82\x90\x10\xab\x6d\x91\x0b\x2e\x63\x84\x9d\xb0\x9b\x0a\xa7\xa9\xe2\x98\xc0\xb7\xa6\x86\x5a\x5b\x4e\xe1\x9c\x12\x0a\x7a\x4a\xfb\x81\xc0\x6d\x43\xda\xfd\x6c\xac\x2d\x46\x61\xb8\xdb\xed\x02\x5e\x11\x0e\x94\xce\xc2\xbc\x0e\x35\xe1\xf5\x74\x72\x35\x5b\x5e\x0d\x89\x74\x93\x74\x23\x73\x34\x06\x34\xfe\x28\x85\xa6\x86\xd7\x07\xe0\x05\x91\x8a\xf9\x9a\xa8\xe6\x7c\x07\x4a\x03\xcf\x34\xd2\x9e\x55\x8e\xf4\x4e\x0b\x2b\x64\xe6\x83\x51\xa9\xdd\x71\x8d\xae\x4c\x22\x8c\xd5\x62\x5d\xda\x13\xcd\x5a\x8a\xd4\x79\x3f\x80\x54\xe3\x12\xce\xa3\x25\x4c\x97\xe7\xf0\x21\x5a\x4e\x97\xbe\x2b\xf2\x75\xba\xfa\x7d\x7e\xb3\x82\xaf\xd1\x62\x11\xcd\x56\xd3\xab\x25\xcc\x17\x30\x99\xcf\x3e\x4e\x57\xd3\xf9\x8c\x9e\x3e\x41\x34\xfb\x06\x9f\xa7\xb3\x8f\x3e\x20\x29\x46\x38\xb8\x2f\xb4\xeb\x40\x69\x57\x42\x38\x41\x31\x09\x60\x89\x78\x42\x21\x55\x35\x25\x53\x60\x2c\x52\x11\x53\x6b\x32\x2b\x79\x86\x90\xa9\x07\xd4\x92\x3a\x72\xf9\x05\xea\xad\x30\xee\x60\x0d\x71\x4c\x20\x17\x5b\x61\xb9\xad\x9e\x9f\xf5\xd5\xa1\x44\x37\xc4\x7c\xb1\xac\xce\xd7\x95\x71\x68\x92\x6f\xd1\xb8\xc3\x8a\x95\xac\x5b\xef\x19\xac\xf6\xdb\x08\x22\x99\x68\xdc\xc1\x07\x25\x1f\x90\xa2\x10\x3c\x42\x3d\xac\x09\xee\xb7\x6c\xcb\x45\x1e\x90\x45\x06\x67\x67\x0f\x5c\x43\xac\xa3\xa2\x80\x4b\x70\xbc\x73\xae\x83\xad\x4a\xca\x1c\x3d\x16\xb7\x26\x66\x64\xbc\x2a\x28\xa8\x10\x55\x9e\xa3\xf6\xd8\x02\x8d\xbd\xda\x17\xb9\xd2\xa8\x27\x56\xe7\xcc\x87\x5b\xf6\xda\x90\x93\x90\xbe\xb2\xd7\xce\x31\xf4\x25\x2d\x65\xec\xda\xf4\xaa\x1d\xbf\x32\xd2\x00\xfe\x3a\x03\xa8\x16\x82\xfb\x87\x89\x2a\xa5\x45\xfd\x85\xe7\x44\xe2\x62\x7c\xdc\x21\xf5\x0b\xe2\x8b\xd7\x2a\xa3\x8d\xdb\xbb\x6e\x27\xce\x91\xeb\xc5\xc9\xf6\x11\x06\xeb\xe2\xff\x56\xe4\xb1\x8f\xf1\xa3\xa4\x3e\xfe\x44\x99\xd0\x41\xb9\x3a\x3c\x37\xd8\xed\x6f\x48\xb5\x1c\x27\x64\xdb\xfb\x17\x41\x30\x20\x93\x38\x85\x3f\x62\xca\xcb\xdc\x7a\x83\x71\xb5\xee\x74\xdd\x22\x1d\x45\x42\x69\x18\x58\xae\x33\xb4\x01\xfd\x45\xb6\x71\xab\xc7\x12\x6e\xf9\xb0\x0e\x62\xbd\x34\xa2\x52\x28\x21\xed\x7f\x24\xb6\x61\x6d\xaa\x48\xc1\xeb\x52\x2f\x81\x85\xf7\x0f\x21\x75\x6f\x43\x4d\x07\x8b\xac\x65\x0c\x1d\xc0\x1b\x8a\x7a\x6f\x08\xc2\x5e\x32\x78\x43\xeb\xb1\x4a\xf0\x66\x31\x9d\xd0\xf4\x50\x92\x9a\xf2\xda\x23\x5a\xb8\x12\x4b\x17\xd9\xa0\xd5\x78\xaf\x5e\x9d\x04\x5c\xc9\xa4\x43\x79\x82\xf3\x13\x3d\xfd\x2f\x14\x57\xa4\xc5\x78\xac\x3e\x1f\x01\x73\x77\xd7\x4f\x00\x3f\xe3\xe1\xe5\x8e\x7a\x01\x75\x99\xc7\xa3\xb2\x4e\x37\x52\x95\xb1\x4e\xb1\xae\x20\xd9\xaf\xc4\xae\x64\x13\x7b\xb2\xfb\xb4\x1e\x99\x87\x42\xda\x8c\xfa\x24\x47\xcd\xa7\xdf\xac\x96\x3a\x1f\x1d\xf9\xb5\x8b\x1b\xe4\x74\xe3\xcd\xa8\x27\x16\x9b\xd0\xd5\x22\x31\x86\xab\x03\xdd\x9f\x11\x30\x8b\x7b\x1b\x16\x39\x8d\xe7\x31\xc4\x1b\xae\x0d\xda\xcb\x9b\xd5\xa7\xe1\x2f\xac\x15\xc7\xef\x51\x1d\x55\xff\x6b\x7e\xcf\xfd\x10\x08\x9a\x30\xfb\x79\xea\x75\xa6\x88\xeb\x4b\x17\x92\x2f\x5e\x5d\xc2\xf0\x6d\xd7\x39\x75\x15\x34\x04\x7b\xdd\xbd\xc0\xb0\x19\xe7\xee\x42\x84\xfb\x21\xbd\x19\x86\x34\x9d\xb6\x43\xea\xb8\x3e\xe3\xe4\x9f\x88\x8f\x7b\x48\x4f\x74\xee\x66\xc1\x73\xb1\xeb\x8b\xfc\x49\xf6\x2f\xa2\x4b\xa7\x17\x06\x4d\xd2\xd2\xf8\xad\xae\xbe\x9b\x8c\xa9\xc8\xba\x9e\x9c\x18\x96\x68\xd3\xd0\xac\x01\xc9\x05\x6a\xfd\x1d\x63\xcb\xfa\x8e\x6d\xc8\xfc\xb1\x9c\xcf\x02\xf7\x56\x91\x99\x48\x0f\x15\xc6\x13\x4b\x9e\x52\xa2\x14\x17\x13\x50\xdf\x19\xbd\x6c\x7f\x85\x0b\x78\x5f\xd7\x22\x95\x3c\xa9\xba\xc0\xb5\x4a\x0e\x03\x36\xee\xd5\xd8\x9a\x6a\x2e\xb1\x5b\x1a\x95\x8d\x73\x80\xdd\x01\xeb\x9a\x62\xee\xe1\xe8\x20\x70\xca\xfb\xc7\x8a\x77\xc1\x77\x5a\xf6\x18\x3b\x12\x7c\x36\xf6\x82\xa2\x34\x1b\x8f\x70\x9a\x90\x46\x7e\x37\x87\x3d\x3a\x81\x41\x60\xca\x38\xa6\x17\x9d\xd7\x29\x3c\x08\x50\x6b\xa5\xfb\x2b\xf5\xdc\x04\x38\x7b\xbc\xa3\xef\x7f\x07\x00\x00\xff\xff\x49\xb7\x02\x95\xf6\x08\x00\x00")

func ui_js_controllers_rest_explorer_js_bytes() ([]byte, error) {
	return bindata_read(
		_ui_js_controllers_rest_explorer_js,
		"ui/js/controllers/rest_explorer.js",
	)
}

func ui_js_controllers_rest_explorer_js() (*asset, error) {
	bytes, err := ui_js_controllers_rest_explorer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/js/controllers/rest_explorer.js", size: 2294, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_templates_monitor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x92\x41\x6f\xda\x40\x10\x85\xef\xfb\x2b\xa6\x3e\xb5\x12\x98\x34\xea\xa9\xa5\x48\x2e\xa1\xaa\xd5\xd4\x48\x18\x1a\xe5\xb8\xac\x07\x7b\x14\xb3\xb3\xdd\x5d\xc7\xf0\xef\x3b\x36\x54\x4d\x14\x6e\xc3\x3c\xcf\xfb\xde\xcc\xce\xdf\x4d\xa7\x6a\xc9\xee\xec\xa9\x6e\x22\xdc\xde\x7c\xfc\x04\xdb\x06\x61\xc9\xe6\xc9\xb3\x36\x0d\x64\x5d\x6c\xd8\x87\x54\xa9\x7b\x32\x68\x03\x56\xd0\xd9\x0a\x3d\x44\x91\x65\x4e\x24\x08\xd7\xce\x04\x7e\xa3\x0f\xc4\x16\x6e\xd3\x1b\x78\x3f\x08\x92\x6b\x2b\xf9\xf0\x45\x9d\xb9\x83\xa3\x3e\x83\xe5\x08\x5d\x40\x19\x40\x01\x0e\xd4\x22\xe0\xc9\xa0\x8b\x40\x16\x0c\x1f\x5d\x4b\xda\x1a\x84\x9e\x62\x33\x9a\x5c\x47\xa4\xea\xf1\x3a\x80\xf7\x51\x8b\x56\x8b\xda\x49\x75\x78\xa9\x02\x1d\x95\x02\xf9\x35\x31\xba\xcf\xb3\x59\xdf\xf7\xa9\x1e\x29\x53\xf6\xf5\xac\xbd\xa8\xc2\xec\x3e\x5f\xae\x8a\x72\x35\x15\x52\xa5\x76\xb6\xc5\x10\xc0\xe3\x9f\x8e\xbc\x04\xdc\x9f\x41\x3b\xe1\x30\x7a\x2f\x74\xad\xee\x81\x3d\xe8\xda\xa3\xf4\x22\x0f\x9c\xbd\xa7\x48\xb6\x9e\x40\xe0\x43\xec\xb5\x47\x55\x51\x88\x9e\xf6\x5d\x7c\xb5\xa0\x7f\x54\x92\xf4\xa5\x40\x56\xa4\x2d\x24\x59\x09\x79\x99\xc0\xb7\xac\xcc\xcb\x89\x7a\xc8\xb7\x3f\xd6\xbb\x2d\x3c\x64\x9b\x4d\x56\x6c\xf3\x55\x09\xeb\x0d\x2c\xd7\xc5\x5d\xbe\xcd\xd7\x85\x54\xdf\x21\x2b\x1e\xe1\x67\x5e\xdc\x4d\x00\x65\x3d\x62\x82\x27\xe7\x07\x76\xf6\x8a\x86\xd5\x61\x95\x42\x89\xf8\xca\xfc\xc0\x17\x98\xe0\xd0\xd0\x81\x8c\x24\xb2\x75\xa7\x6b\x84\x9a\x9f\xd1\x5b\x09\xa2\x1c\xfa\x23\x85\xe1\x78\x41\xd0\x2a\x68\xe9\x48\x51\xc7\xb1\x7e\x13\xe7\xbf\x45\xb6\x13\xe6\x4d\x39\x9e\x51\x0d\x3e\x56\x1f\x31\x0c\x37\x31\x6c\x2f\x71\xc7\xc7\x33\x9d\x2e\x94\x9a\x57\xf4\x0c\xa6\xd5\x21\x7c\x4d\x04\x3a\xae\x4e\xae\x65\x8f\x3e\x59\xc8\xc5\xe6\x6e\x91\xb5\x2d\xfc\x62\x4b\xf2\x09\xf4\xec\x9f\xe4\x09\xc8\x3f\x35\x83\x04\x45\xe9\xab\xf9\x4c\x26\xc8\xa0\xbf\x01\x00\x00\xff\xff\x6d\xf6\xd4\xbd\xb6\x02\x00\x00")

func ui_templates_monitor_html_bytes() ([]byte, error) {
	return bindata_read(
		_ui_templates_monitor_html,
		"ui/templates/monitor.html",
	)
}

func ui_templates_monitor_html() (*asset, error) {
	bytes, err := ui_templates_monitor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/templates/monitor.html", size: 694, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_templates_rest_explorer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\x13\x82\x21\x01\x62\xab\xeb\xf6\xd4\xda\xc1\x14\x5b\x6b\x8c\x04\xb6\x61\x39\x29\xfa\x48\x4b\x67\x89\x30\x45\x6a\x24\xe5\x1f\x28\xfa\xbf\xef\x28\x29\x73\x82\x25\x4d\x9d\xa1\xf9\xf1\x12\x53\xfc\x8e\xdf\x77\xdf\xdd\x99\x72\xef\x97\x4e\xc7\x1b\xa8\x72\xa7\x79\x96\x5b\x78\xff\xee\xb7\x3f\x60\x9e\x23\x0c\x54\xb2\xd2\x8a\x25\x39\x84\x95\xcd\x95\x36\x5d\xcf\xbb\xe2\x09\x4a\x83\x29\x54\x32\x45\x0d\x96\x60\x61\x49\x10\x84\x76\xe7\x14\x6e\x50\x1b\xae\x24\xbc\xef\xbe\x83\x63\x07\xf0\xdb\x2d\xff\xe4\xa3\xb7\x53\x15\x14\x6c\x07\x52\x59\xa8\x0c\xd2\x01\xdc\xc0\x92\x0b\x04\xdc\x26\x58\x5a\xe0\x12\x12\x55\x94\x82\x33\x99\x20\x6c\xb8\xcd\x6b\x92\xf6\x88\xae\xf7\xa5\x3d\x40\x2d\x2c\x23\x2c\x23\x74\x49\xab\xe5\x5d\x14\x30\xeb\x79\x40\x7f\xb9\xb5\xe5\x87\x20\xd8\x6c\x36\x5d\x56\xab\xec\x2a\x9d\x05\xa2\x41\x99\xe0\x6a\x34\x88\xc6\x71\xd4\x21\xa5\x9e\x77\x2d\x05\x1a\x03\x1a\xff\xae\xb8\xa6\x04\x17\x3b\x60\x25\xe9\x48\xd8\x82\xd4\x09\xb6\x01\xa5\x81\x65\x1a\x69\xcf\x2a\xa7\x73\xa3\xb9\xe5\x32\x3b\x05\xa3\x96\x76\xc3\x34\x7a\x29\x37\x56\xf3\x45\x65\xef\x19\x74\xab\x8a\x32\xbd\x0b\x20\x8b\x98\x04\x3f\x8c\x61\x14\xfb\x70\x1e\xc6\xa3\xf8\xd4\xfb\x3c\x9a\x5f\x4c\xae\xe7\xf0\x39\x9c\xcd\xc2\xf1\x7c\x14\xc5\x30\x99\xc1\x60\x32\x1e\x8e\xe6\xa3\xc9\x98\x56\x7f\x41\x38\xfe\x02\x97\xa3\xf1\xf0\x14\x90\xec\x21\x12\xdc\x96\xda\x69\x57\xda\xe3\xce\x3a\x4c\xbb\x10\x23\xde\x23\x5f\xaa\x46\x8c\x29\x31\xe1\x4b\x9e\x50\x46\x32\xab\x58\x86\x90\xa9\x35\x6a\x49\x89\x78\x25\xea\x82\x1b\x57\x3c\x43\xd2\x52\x10\xbc\xe0\x96\xd9\x7a\xfd\x9f\x74\xf6\x14\xe1\x35\x69\x9e\xc5\x75\x19\x3d\xc7\x23\x59\x81\xc6\xd5\x24\x51\xb2\x49\xb7\x69\x9e\xa6\x8d\x3e\x40\x28\x53\x8d\x1b\x38\x57\x72\x8d\x04\x40\x38\x26\xb6\xdd\x82\x68\xfe\xcc\x0a\xc6\x45\x97\x3a\xe0\xc4\xeb\x74\xce\xbc\x5e\xca\xd7\x90\x08\x66\x4c\xdf\xa7\x14\x6d\xb4\x2d\x85\xd2\xa8\xfd\x33\xaa\xef\x63\x9b\x03\xc7\xaa\x84\xa9\x41\x04\x33\x98\xb8\x1c\xbe\x07\xed\x24\xcd\x87\x36\x84\x82\xf2\xdf\xcf\x2e\x83\x1b\x98\x32\xae\x7b\x01\x2d\x6e\x9f\x53\x7e\xc5\xed\x82\x96\x5c\x96\x95\x05\xbb\x2b\xb1\xef\x5b\xdc\x5a\x1f\x64\xd6\x29\x54\x8a\xa2\xef\xaf\xd6\x97\xb8\xab\x1f\x50\xd9\x5d\x17\xa5\x35\x79\x49\x79\xe2\x14\x65\x4a\x96\xfb\x50\x0a\x96\x60\xae\x04\xb9\xdb\xf7\x1d\x7e\x7f\xf8\xaf\x9a\x69\xfd\xf1\x47\xb9\x6e\x98\xa8\xf0\x20\xb6\x26\xe2\x91\x64\xa8\x68\x56\xc9\xfa\xbc\x84\x86\x60\xd5\xf7\x73\x2a\x92\xc0\x81\x5b\x1c\x1f\xa1\xab\xdc\xc9\x53\x74\x6b\xc7\xd0\xf7\x3f\x21\x69\x4d\x99\x65\x1d\xda\x28\x15\x97\xb6\xef\x07\xab\x75\xe0\x2a\x11\xb8\x0e\xd8\x05\xed\x7e\x81\xd4\x21\x74\xd2\xa7\x68\xfe\x12\xc2\x2e\x90\xa5\x07\x2a\xbb\x88\xc2\xe1\x4b\x48\x9b\x56\x87\x7a\x36\xbd\x26\xcf\x1a\x55\x3f\x5f\xde\x10\x05\x5a\x3c\x50\xe1\x30\xba\x8a\xe6\xd1\x7e\xc6\x82\xfd\x30\xf5\x82\x76\x4a\xff\xe7\xcc\xce\xe8\x5b\x0d\x9f\x3f\xb0\x75\x78\x6c\x99\xb6\x07\x4d\x52\x13\xf1\xdc\xc9\xad\x49\x23\x99\x1e\x44\xe9\xf0\xaf\x3d\xba\xda\x09\x7f\x9d\xc9\x7d\xaa\xff\x1e\x92\xf6\x02\xed\x37\x50\x95\xb4\xf8\x26\x6f\x0c\x59\x15\x0b\xba\x38\xef\xb1\xb5\x72\xe9\x22\x78\x82\xf4\xb5\x3b\x2d\x69\x84\xbe\xc9\x6b\xe2\x11\x6d\x2f\x76\x51\x28\x73\xb8\x71\xd3\x49\xfc\x26\xc6\xf4\x11\x79\x3f\x3a\xa9\xbd\x80\x5e\x01\xbf\xf7\x2a\x78\xa5\x6e\x7b\xb7\x99\x4e\x69\x94\xb8\x73\x3d\x3c\x98\xf7\xc3\xc7\x90\x17\xc8\xf4\x79\x8b\x69\xd3\x1b\xb8\x67\x77\x9d\xaa\x41\xb3\xd6\x0c\x8a\xfa\xd7\xae\x96\xcf\xc9\x24\xb4\xc6\x12\x19\xf9\x20\x54\xe6\x7e\x48\xe8\x7d\x00\x58\xcd\x92\x95\xfb\xf1\x71\xc4\xd3\xe3\x23\x4e\x6f\xdd\x5b\x8a\xfe\xfa\x95\xa0\xdf\xbe\xed\xf3\x6d\x3e\xb4\xff\xbc\x7f\x02\x00\x00\xff\xff\xa5\x02\xb0\x2f\xc2\x0d\x00\x00")

func ui_templates_rest_explorer_html_bytes() ([]byte, error) {
	return bindata_read(
		_ui_templates_rest_explorer_html,
		"ui/templates/rest_explorer.html",
	)
}

func ui_templates_rest_explorer_html() (*asset, error) {
	bytes, err := ui_templates_rest_explorer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/templates/rest_explorer.html", size: 3522, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/css/app.css":                     ui_css_app_css,
	"ui/css/rest_explorer.css":           ui_css_rest_explorer_css,
	"ui/index.html":                      ui_index_html,
	"ui/js/app.js":                       ui_js_app_js,
	"ui/js/controllers/monitor.js":       ui_js_controllers_monitor_js,
	"ui/js/controllers/rest_explorer.js": ui_js_controllers_rest_explorer_js,
	"ui/templates/monitor.html":          ui_templates_monitor_html,
	"ui/templates/rest_explorer.html":    ui_templates_rest_explorer_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"ui": {nil, map[string]*_bintree_t{
		"css": {nil, map[string]*_bintree_t{
			"app.css":           {ui_css_app_css, map[string]*_bintree_t{}},
			"rest_explorer.css": {ui_css_rest_explorer_css, map[string]*_bintree_t{}},
		}},
		"index.html": {ui_index_html, map[string]*_bintree_t{}},
		"js": {nil, map[string]*_bintree_t{
			"app.js": {ui_js_app_js, map[string]*_bintree_t{}},
			"controllers": {nil, map[string]*_bintree_t{
				"monitor.js":       {ui_js_controllers_monitor_js, map[string]*_bintree_t{}},
				"rest_explorer.js": {ui_js_controllers_rest_explorer_js, map[string]*_bintree_t{}},
			}},
		}},
		"templates": {nil, map[string]*_bintree_t{
			"monitor.html":       {ui_templates_monitor_html, map[string]*_bintree_t{}},
			"rest_explorer.html": {ui_templates_rest_explorer_html, map[string]*_bintree_t{}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
